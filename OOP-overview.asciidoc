OOP Overview
============

.How different kinds of objects may be represented
[cols="2*,12*^", options="header"]
|====================

2+|
12+| Combinations

2+h| Property
|1|2|3|4|5|6|7|8|9|10|11|12

.3+| State
| None
|✔|✔|✔| | | | | | | | |

| Immutable
| | | |✔|✔|✔| | | | | |

| Mutable
| | | | | | |✔|✔|✔|✔|✔|✔

14+|

.3+| Polymorphism
| None
|✔| | |✔| | |✔| |✔| |✔|

| Closed
| |✔| | |✔| |✔| |✔| |✔|

| Open
| | |✔| | |✔| |✔| |✔| |✔

14+|

.3+| Sharing
| Single referrer
|✓|✓|✓|✓|✓|✓|✔|✔| | | |

| Multiple referrers
|✓|✓|✓|✓|✓|✓| | |✔|✔| |

| Shared between threads
|✓|✓|✓|✓|✓|✓| | | | |✔|✔

14+.>h| Representable by...

2+|
|1|2|3|4|5|6|7|8|9|10|11|12

2+| Term
|✔|✔| |✔|✔| |✔| | | | |

2+| Function object
| | |✔| | |✔| | | | | |

2+| VTable
| | |✔| | |✔| | | | | |

2+| (VTable,State) pair
| | | | | | | |✔| | | |

2+| ETS table
| | | | | | | | |✔|✔|✔|✔

2+| Process
| | | | | | | | | |✔|✔|✔

|====================

// TODO: Note on vtable: can be either a set of function objects (e.g. a record), or a Module implementing a behaviour.
// TODO: Note on ETS tables vs. processes: Whether a table can be used, depends on the kinds of transactions which are needed.
// TODO: Note on singletons: For compile-time constants, a term may be used. For all other cases, a named ETS table or process is needed.

.Comments
[cols="^10%,90%", options="header"]
|====================
| Nr.
| Comment

| 1
a|

Has neither value nor behaviour. There are two cases:

- A unique reference, if object identity is used.
- A dummy constant, otherwise.

| 2
| Atom naming the type

| 3
| Behaviour without state

| 4
| Classic monomorphic value object

| 5
| Records

| 6
| Behaviour with fixed state

| 7
| Threaded value

| 8
| Threaded value with vtable

| 9
| Mutable objects kept in an ETS table

| 10
| Mutable (VTable,State) pairs kept in an ETS table

| 11
| Non-private ETS table, or state kept by a process

| 12
| Non-private ETS table, or state kept by a process
|====================
